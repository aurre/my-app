version: 2

job_defaults: &job_defaults
  working_directory: ~/aurre/my-app
  docker:
    - image: cimg/node:16.13
  environment:
    TZ: America/Los_Angeles

jobs:
  setup:
    <<: *job_defaults
    steps:
      - checkout
      - restore_cache:
          name: Restore Yarn Package Cache
          key: yarn-packages-{{ checksum "yarn.lock" }}
      - run:
          name: Install Dependencies with Yarn
          command: yarn install
      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packages-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - persist_to_workspace:
          root: .
          paths: .
  test:
    <<: *job_defaults
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Run Tests
          command: yarn test
  build:
    <<: *job_defaults
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Setup Build Job Environment Variables
          command: |
            echo 'export PATH="$PATH:$HOME/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/node_modules/.bin"' >> $BASH_ENV
            echo 'export REACT_APP_SHA1="$CIRCLE_SHA1"' >> $BASH_ENV
            echo 'export REACT_APP_TAG="$CIRCLE_TAG"' >> $BASH_ENV
            echo 'export REACT_APP_BRANCH="$CIRCLE_BRANCH"' >> $BASH_ENV
            source build_env.sh
            source $BASH_ENV
      - run:
          name: Build Application
          command: yarn build
      - persist_to_workspace:
          root: .
          paths: build
  deploy:
    working_directory: ~/aurre/my-app
    docker:
      - image: cimg/base:current
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Setup Environment Variables
          command: |
            source build_env.sh
            source $BASH_ENV
      - run:
          name: Print Build Environment Info
          command: echo "Deploying application to the $ENVIRONMENT environment. Application will be deployed to $DEPLOY_URL"
      - run:
          name: Deploy applicaton
          command: ssh -o StrictHostKeyChecking=no circleci@raysa.me "/home/circleci/deploy.sh $ENVIRONMENT"

workflows:
  version: 2
  branch_tests:
    jobs:
      - setup:
          filters:
            branches:
              ignore: /develop|qa|main/
            tags:
              ignore: /.*/
      - test:
          requires:
            - setup
  dev:
    jobs:
      - setup:
          filters: &dev_filters
            branches:
              only: develop
      - test:
          filters: *dev_filters
          requires:
            - setup
      - build:
          filters: *dev_filters
          requires:
            - setup
      - deploy:
          filters: *dev_filters
          requires:
            - test
            - build
  qa:
    jobs:
      - setup:
          filters: &qa_filters
            branches:
              only: qa
      - test:
          filters: *qa_filters
          requires:
            - setup
      - build:
          filters: *qa_filters
          requires:
            - setup
      - deploy:
          filters: *qa_filters
          requires:
            - test
            - build
  stage:
    jobs:
      - setup:
          filters: &stage_filters
            branches:
              only: main
      - test:
          filters: *stage_filters
          requires:
            - setup
      - build:
          filters: *stage_filters
          requires:
            - setup
      - deploy:
          filters: *stage_filters
          requires:
            - test
            - build
  prod:
    jobs:
      - setup:
          filters: &prod_filters
            branches:
              ignore: /.*/
            tags:
              only: /[0-9]+(\.[0-9]+)*/
      - test:
          filters: *prod_filters
          requires:
            - setup
      - build:
          filters: *prod_filters
          requires:
            - setup
      - approve:
          filters: *prod_filters
          type: approval
          requires:
            - test
            - build
      - deploy:
          filters: *prod_filters
          requires:
            - approve
